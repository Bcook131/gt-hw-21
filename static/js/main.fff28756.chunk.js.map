{"version":3,"sources":["utils/API.js","containers/ResultCard/ResultCard.jsx","containers/Home/Home.jsx","containers/NoMatch/NoMatch.jsx","containers/Header/Header.jsx","containers/NavBar/NavBar.jsx","containers/Saved/Saved.jsx","App.js","serviceWorker.js","index.js"],"names":["query","axios","get","then","result","data","bookInfo","post","id","delete","ResultCard","state","books","savedBooks","handleSearch","event","bookTitle","target","value","API","response","setState","items","handleSave","alert","concat","console","log","catch","err","this","htmlFor","className","style","marginLeft","type","name","onChange","justifyContent","map","book","src","volumeInfo","imageLinks","smallThumbnail","alt","title","width","authors","description","marginBottom","onClick","image","link","infoLink","href","color","Component","Home","NoMatch","textAlign","role","aria-label","Header","backgroundColor","NavBar","data-toggle","data-target","aria-controls","aria-expanded","Saved","saved","getSavedBooks","res","handleDelete","window","confirm","filter","notDeleted","_id","App","useEffect","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fff28756.chunk.js","sourcesContent":["//put google API stuff here\r\n//making request to server to do things \r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  // this gets the books from the query passed n\r\n  getBook: function (query) {\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n  },\r\n  //this returns the saved books in the database\r\n  savedBooks: function () {\r\n    return axios.get(\"/api/books\").then((result) => result.data);\r\n  },\r\n  //this saves a book to the database\r\n  saveBook: function (bookInfo) {\r\n    return axios.post(\"/api/books\", bookInfo).then((result) => result.data);\r\n  },\r\n  //deletes a book given a specific id\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id).then((result) => result.data);\r\n  },\r\n};","import React, { Component } from \"react\";\r\nimport API from \"../../utils/API\";\r\n\r\nclass ResultCard extends Component {\r\n  state = {\r\n    books: [],\r\n    savedBooks: [],\r\n  };\r\n\r\n  handleSearch = (event) => {\r\n    const bookTitle = event.target.value;\r\n    API.getBook(bookTitle).then((response) =>\r\n      this.setState({ books: response.data.items })\r\n    );\r\n  };\r\n\r\n  //save button doesn't work\r\n  handleSave = (bookInfo) => {\r\n    API.saveBook(bookInfo)\r\n      .then((response) => {\r\n        alert(\"Your book has been saved.\")\r\n        this.setState({ savedBooks: this.state.savedBooks.concat([response]) });\r\n        console.log(\"this is my saved book\", this.state.savedBooks);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    // if(book.volumeInfo.imageLinks.smallThumbnail === \"undefined\"){\r\n    //   let imageSource = \"https://f0.pngfuel.com/png/137/448/black-book-logo-png-clip-art-thumbnail.png\"\r\n    // }\r\n    console.log(this.state.books);\r\n    return (\r\n      <div>\r\n        <form>\r\n          <label\r\n            htmlFor=\"inputPassword\"\r\n            className=\"col-sm-2 col-form-label\"\r\n            style={{ marginLeft: \"45%\" }}\r\n          >\r\n            Search for a Book\r\n          </label>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col-sm-8\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"search\"\r\n                onChange={this.handleSearch}\r\n                style={{ justifyContent: \"center\", marginLeft: \"30%\" }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {this.state.books.map((book) => (\r\n          <div className=\"card mb-3\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-md-4\">\r\n                <img\r\n                  src={\r\n                    (book.volumeInfo.imageLinks &&\r\n                      book.volumeInfo.imageLinks.smallThumbnail) ||\r\n                    \"https://f0.pngfuel.com/png/137/448/black-book-logo-png-clip-art-thumbnail.png\"\r\n                  }\r\n                  alt={book.volumeInfo.title}\r\n                  width=\"300\"\r\n                  style={{ marginLeft: \"50px\" }}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{book.volumeInfo.title}</h5>\r\n                  <p className=\"card-text\">{book.volumeInfo.authors} </p>\r\n                  <p className=\"card-text\">{book.volumeInfo.description}</p>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    style={{ marginBottom: \"10px\" }}\r\n                    onClick={() => this.handleSave({\r\n                      title: book.volumeInfo.title, \r\n                      authors: book.volumeInfo.authors, \r\n                      description: book.volumeInfo.description, \r\n                      image : book.volumeInfo.imageLinks.smallThumbnail, \r\n                      link: book.volumeInfo.infoLink\r\n                    })}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                  <br></br>\r\n                  <button type=\"button\" className=\"btn btn-primary\">\r\n                    <a\r\n                      href={book.volumeInfo.infoLink}\r\n                      style={{ color: \"white\" }}\r\n                    >\r\n                      View\r\n                    </a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultCard;","import React from 'react';\r\n// import Form from \"../Form/Form\"\r\nimport ResultCard from \"../ResultCard/ResultCard\"\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            {/* <Form/> */}\r\n            <ResultCard/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst NoMatch = () => {\r\n  const styles = {\r\n    badpage: {\r\n      textAlign: \"center\",\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      <h1 style={styles.badpage}>Page not found! Get outta here! <span role=\"img\" aria-label=\"Mind Blown Emoji\"> 🤯</span> </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"jumbotron jumbotron-fluid\" style={{backgroundColor: \"#E3B5A4\"}}>\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4\">React Google Books Search</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          Google Books Search\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Searched\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/saved\">\r\n                Saved\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\n// import ResultsCard from \"../ResultCard/ResultCard\"\r\nimport API from \"../../utils/API\";\r\n\r\nclass Saved extends Component {\r\n  state = {\r\n    saved: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSavedBooks();\r\n  }\r\n\r\n  getSavedBooks = () => {\r\n    API.savedBooks().then((res) => {\r\n      this.setState({ saved: res });\r\n    });\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    const confirmation = window.confirm(\"Are you sure you want to delete this book?\")\r\n    if (confirmation){\r\n      API.deleteBook(id).then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          saved: this.state.saved.filter((notDeleted) => {\r\n            if (id === notDeleted._id) {\r\n              return false;\r\n            } else {\r\n              return true;\r\n            }\r\n          }),\r\n        });\r\n      });\r\n    }\r\n\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.saved.map((savedBooks) => (\r\n          <div className=\"card mb-3\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-md-4\">\r\n                <img\r\n                  src={savedBooks.image}\r\n                  alt={savedBooks.title}\r\n                  width=\"300\"\r\n                  style={{ marginLeft: \"50px\" }}\r\n                />\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{savedBooks.title}</h5>\r\n                  <p className=\"card-text\">{savedBooks.authors} </p>\r\n                  <p className=\"card-text\">{savedBooks.description}</p>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.handleDelete(savedBooks._id)}\r\n                    style={{marginBottom: \"10px\"}}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <br>\r\n                  </br>\r\n                  <button type=\"button\" className=\"btn btn-primary\">\r\n                    <a href={savedBooks.infoLink} style={{ color: \"white\" }}>\r\n                      View\r\n                    </a>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      // <>Hello world</>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Home from \"./containers/Home/Home\";\r\nimport NoMatch from \"./containers/NoMatch/NoMatch\";\r\nimport Header from \"./containers/Header/Header\";\r\nimport NavBar from \"./containers/NavBar/NavBar\";\r\nimport Saved from \"./containers/Saved/Saved\"\r\n// import NavBar from \"./containers/NavBar/\"\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/api/config\")\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Header />\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/saved\" component={Saved}/>\r\n          <Route component={NoMatch} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}